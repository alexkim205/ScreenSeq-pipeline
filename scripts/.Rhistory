#### Target Gene ID
for (well_section_i in seq_along(plate)) {
for (well_i in seq_along(well_section)) {
temp_vector[i] <- plate[[well_section_i]][[well_i]][[id]]
i <- i + 1
}
}
return(temp_vector)
}
traverse_outof_plate_wells <- function(plate, id) {
# Get data_id out
temp_vector <- c()
i <- 1
#    Plate ID
##   Well Letter
###  Well Number
#### Barcode
#### Target Gene ID
for (well_section_i in seq_along(plate)) {
for (well_i in seq_along(well_section)) {
temp_vector[i] <- plate[[well_section_i]][[well_i]][[id]]
i <- i + 1
}
}
return(temp_vector)
}
add_gene_id <- function(plates, target_genes_list) {
temp_plates <- plates
for (plate in seq_along(plates)) {
temp_plates[[plate]] <- traverse_into_plate_wells(plate, "target_gene", target_genes_list)
}
return(temp_plates)
}
source("functions.R")
source("parameters.R")
tgene_f <- paste0("../clean_data/", pert_map, "_wo_ids.xlsx")
tgene_fo <- paste0("../output/", pert_map, "_w_ids.xlsx")
WRITE_CONSTRUCT_FILE <- TRUE
tgene_df <- create_constructs(tgene_f, tgene_fo)
barcodes_f <- paste0("../clean_data/fw_rv_pr_barcodes.xlsx")
barcodes_fo <- paste0("../output", barcode_map, "_map.ods.xlsx")
WRITE_BARCODES_FILE <- TRUE
WRITE_PRINTSHEET_HELPER <- TRUE
plates <- create_plates(plate_ids, barcode_map)
complete_plates <- add_gene_id(plates, tgene_df$`Construct ID`)
plate_ids
barcode_map
barcode_maps <- c("P1a","P1", "P2") # P3, P4
plate_ids <- c("D12", "D19", "D19")
replicates <- c("R3", "R2", "R3")
plates <- create_plates(plate_ids, barcode_maps)
barcode_maps
getwd()
barcode_maps_path <- "../clean_data/"
barcode_maps <- c("barcodes_P1a.xlsx","barcodes_P1.xlsx", "barcodes_P2.xlsx") # P3, P4
barcode_map_f <- paste0(barcode_maps_path, barcode_maps)
barcode_map_f
barcode_maps_f <- paste0(barcode_maps_path, barcode_maps)
create_barcodes(well_alpha, well_numer, plate_i - 1, 3)
offsets = c(0, 1, 2, 3, 4)
preset_bc_maps = c("P1", "P1a", "P2", "P3", "P4")
barcode_maps_f
barcode_maps_f <- paste0(barcode_maps_path, barcode_maps)
barcode_maps
barcode_maps_path <- "../clean_data/barcodes"
barcode_maps <- c("P1a","P1", "P2") # P3, P4
barcode_maps_f <- paste0(barcode_maps_path, barcode_maps, ".xlsx")
barcode_maps_f
barcode_maps <- c("P1a","P1", "P2") # P3, P4
barcode_maps_f <- paste0(barcode_maps_path, barcode_maps, ".xlsx")
barcode_maps_f
which(barcode_maps)
which(barcode_maps %in% preset_bc_maps)
barcode_maps
plate_i
which(barcode_maps[plate_i] %in% barcode_maps)
barcode_maps[plate_i]
barcode_maps %in% barcode_maps[plate_i]
match(barcode_maps[plate_i], barcode_maps)
match(barcode_maps, barcode_maps)
offsets[match(barcode_maps[plate_i], barcode_maps)]
offset <- offsets[match(barcode_maps[plate_i], barcode_maps)]
temp_plate <- create_barcodes(well_alpha, well_numer, offset)
temp_plate
traverse_outof_plate_wells(temp_plate, "target_gene")
traverse_outof_plate_wells(temp_plate, "barcode")
barcode_maps_fo <- paste0(path_to_write_barcode_maps_to, barcode_maps, ".xlsx")
path_to_write_barcode_maps_to <- "../clean_data/barcodes/"
barcode_maps_fo <- paste0(path_to_write_barcode_maps_to, barcode_maps, ".xlsx")
all.equal(traverse_outof_plate_wells(temp_plate, "barcode"), xzc)
read_excel(barcode_maps_fo[0])
read_excel()
barcode_maps_fo[0]
barcode_maps_fo
read_excel(barcode_maps_fo[1])
?read_excel
read_excel(barcode_maps_fo[1], col_names=FALSE)
read_excel(barcode_maps_fo[1], col_names=FALSE)$X__1
read_excel(barcode_maps_fo[1], col_names=FALSE)$X__1
plate_i
barcode_maps
(barcode_maps_fo[1]
)
plate_i
plate_ids
barcode_maps
plate_i=1
offset <- offsets[match(barcode_maps[plate_i], barcode_maps)]
offset
barcode_maps[plate_i]
offsets = c(0, 1, 2, 3, 4)
offsets
temp_plate <- create_barcodes(well_alpha, well_numer, 0)
temp_plate
traverse_outof_plate_wells(create_barcodes(well_alpha, well_numer, 0), "barcode")
create_barcodes(well_alpha, well_numer, offset)
barcode_maps_fo <- paste0(barcode_maps_path, barcode_maps, ".xlsx")
barcode_maps_path <- "../clean_data/barcodes/"
barcode_maps_fo <- paste0(barcode_maps_path, barcode_maps, ".xlsx")
preset_bc_maps = c("P1", "P1a", "P2", "P3", "P4")
present_bc_maps
preset_bc_maps = c("P1", "P1a", "P2", "P3", "P4")
read_excel(barcode_maps_fo[1], col_names=FALSE)$X__1
barcode_maps_f <- paste0(barcode_maps_path, barcode_maps, ".xlsx")
read_excel(barcode_maps_f[plate_i], col_names=FALSE)$X__1
barcodes_for_plate <- read_excel(barcode_maps_f[plate_i], col_names=FALSE)$X__1
barcodes_for_plate
temp_plate <- traverse_into_plate_wells(plates[[plate_i]], "barcode", barcodes_for_plate)
temp_plate
barcodes_for_plate
for (plate_i in 1:length(plate_ids)) {
barcodes_for_plate <- read_excel(barcode_maps_f[plate_i], col_names=FALSE)$X__1
plates[[plate_i]] <- traverse_into_plate_wells(plates[[plate_i]], "barcode", barcodes_for_plate)
# offset <- offsets[match(barcode_maps[plate_i], barcode_maps)]
# temp_plate <- create_barcodes(well_alpha, well_numer, offset)
# plates[[plate_ids[plate_i]]] <- temp_plate
}
plates
plates <- create_plates(plate_ids, barcode_maps)
create_plates <- function(plate_ids, barcode_maps) {
barcode_maps_f <- paste0(barcode_maps_path, barcode_maps, ".xlsx")
preset_bc_maps = c("P1", "P1a", "P2", "P3", "P4")
plates <- sapply(plate_ids, function(x) NULL)
for (plate_i in 1:length(plate_ids)) {
barcodes_for_plate <- read_excel(barcode_maps_f[plate_i], col_names=FALSE)$X__1
plates[[plate_i]] <- traverse_into_plate_wells(plates[[plate_i]], "barcode", barcodes_for_plate)
# offset <- offsets[match(barcode_maps[plate_i], barcode_maps)]
# temp_plate <- create_barcodes(well_alpha, well_numer, offset)
# plates[[plate_ids[plate_i]]] <- temp_plate
}
return(plates)
}
plates <- create_plates(plate_ids, barcode_maps)
plate_i
plate_ids
plates
plates <- sapply(plate_ids, function(x) NULL)
plates
create_plates <- function(plate_ids, barcode_maps) {
barcode_maps_f <- paste0(barcode_maps_path, barcode_maps, ".xlsx")
preset_bc_maps = c("P1", "P1a", "P2", "P3", "P4")
plates <- sapply(plate_ids, function(x) NULL)
for (plate_i in 1:length(plate_ids)) {
barcodes_for_plate <- read_excel(barcode_maps_f[plate_i], col_names=FALSE)$X__1
plates[[plate_ids[plate_i]]] <-
traverse_into_plate_wells(plates[[plate_ids[plate_i]]], "barcode", barcodes_for_plate)
# offset <- offsets[match(barcode_maps[plate_i], barcode_maps)]
# temp_plate <- create_barcodes(well_alpha, well_numer, offset)
# plates[[plate_ids[plate_i]]] <- temp_plate
}
return(plates)
}
plates <- create_plates(plate_ids, barcode_maps)
plates
plate_ids
barcode_maps
barcode_maps_f <- paste0(barcode_maps_path, barcode_maps, ".xlsx")
preset_bc_maps = c("P1", "P1a", "P2", "P3", "P4")
plates <- sapply(plate_ids, function(x) NULL)
plate_i=1
barcodes_for_plate <- read_excel(barcode_maps_f[plate_i], col_names=FALSE)$X__1
barcodes_for_plate
plates
plate_ids[plate_i]
plates[[plate_ids[plate_i]]]
create_barcodes_old <- function(well_alpha, well_numer, offset = 0, divider = 3) {
barcode_in_df <- read_excel(barcodes_f)
fw <- barcode_in_df$`fw_BC`
rv <- fw
section <- length(fw) / 3
starts <- fw[seq(1, length(fw), section)]
wells <- sapply(well_alpha,function(x) NULL)
offset_wrap <- function(a, o) {
shift_temp <- a[c(1:o)]
a <- shift(a, o, type="lead")
a[c((length(a)-o+1):length(a))] <- shift_temp
return(a)
}
#    Plate ID
##   Well Letter
###  Well Number
#### Barcode
#### Target Gene ID
for (sec in 1:divider) {
s <- (sec - 1) * section + 1
e <- sec * section
fw_temp <- fw[s:e]
for (secsec in 1:divider) {
s <- (secsec - 1) * section + 1
e <- secsec * section
section_i <- (sec - 1) * divider + secsec
rv_temp <- rv[s:e]
# offset
rv_temp <- offset_wrap(rv_temp, offset)
for (secsecsec in 1:section) {
final_barcode <- paste0(fw_temp[secsecsec], "_", rv_temp[secsecsec])
if (section_i <= length(well_alpha)) {
wells[[well_alpha[section_i]]][[secsecsec]] <- sapply(c("barcode", "target_gene"),function(x) NULL)
wells[[well_alpha[section_i]]][[secsecsec]][["barcode"]] <- final_barcode
}
}
}
}
return(wells)
}
days <- c("D12", "D19", "D19")
replicates <- c("R3", "R2", "R3")
plate_ids <- paste0(days,"_",replicates)
barcode_maps_f <- paste0(barcode_maps_path, barcode_maps, ".xlsx")
preset_bc_maps = c("P1", "P1a", "P2", "P3", "P4")
plates <- sapply(plate_ids, function(x) NULL)
plates
traverse_into_plate_wells(plates[[plate_ids[plate_i]]], "barcode", barcodes_for_plate)
plates
plate_i
wells <- sapply(well_alpha,function(x) NULL)
wells
temp_plate <- plate
plate
plates <- sapply(plate_ids, function(x) NULL)
plate <- plates[[plate_ids[plate_i]]]
plate
wells <- sapply(well_alpha,function(x) NULL)
wells
plate
temp_plate <- sapply(well_alpha,function(x) NULL)
temp_plate
temp_plate <- sapply(well_alpha,function(x) NULL)
temp_plate[[well_section_i]]
well_section_i
well_section_i<-1
temp_plate[[well_section_i]] <- sapply(well_numer,function(x) NULL)
temp_plate
for (well_section_i in seq_along(temp_plate)) {
temp_plate[[well_section_i]] <- sapply(well_numer,function(x) NULL)
for (well_i in seq_along(well_section)) {
temp_plate[[well_section_i]][[well_i]] <- sapply(c("barcode", "target_gene"),function(x) NULL)
temp_plate[[well_section_i]][[well_i]][[id]] <- list[i]
i <- i + 1
}
}
create_new_from_list <- function(plate, well_alpha, well_numer, id, list) {
# create new plate list from list of barcodes/target_genes
temp_plate <- sapply(well_alpha,function(x) NULL)
i <- 1
for (well_section_i in seq_along(temp_plate)) {
temp_plate[[well_section_i]] <- sapply(well_numer,function(x) NULL)
for (well_i in seq_along(well_section)) {
temp_plate[[well_section_i]][[well_i]] <- sapply(c("barcode", "target_gene"),function(x) NULL)
temp_plate[[well_section_i]][[well_i]][[id]] <- list[i]
i <- i + 1
}
}
return(temp_plate)
}
create_new_from_list(plates[[plate_ids[plate_i]]],
well_alpha,
well_numer,
"barcode",
barcodes_for_plate)
plates <- sapply(plate_ids, function(x) NULL)
create_new_from_list(plates[[plate_ids[plate_i]]],
well_alpha,
well_numer,
"barcode",
barcodes_for_plate)
plates <- sapply(plate_ids, function(x) NULL)
for (plate_i in 1:length(plate_ids)) {
barcodes_for_plate <- read_excel(barcode_maps_f[plate_i], col_names=FALSE)$X__1
plates[[plate_ids[plate_i]]] <-
create_new_plate_from_list(plates[[plate_ids[plate_i]]],
well_alpha, well_numer,
"barcode", barcodes_for_plate)
# traverse_into_plate_wells(plates[[plate_ids[plate_i]]], "barcode", barcodes_for_plate)
# offset <- offsets[match(barcode_maps[plate_i], barcode_maps)]
# temp_plate <- create_barcodes(well_alpha, well_numer, offset)
# plates[[plate_ids[plate_i]]] <- temp_plate
}
create_new_plate_from_list <- function(plate, well_alpha, well_numer, id, list) {
# create new plate list from list of barcodes/target_genes
temp_plate <- sapply(well_alpha,function(x) NULL)
i <- 1
for (well_section_i in seq_along(temp_plate)) {
temp_plate[[well_section_i]] <- sapply(well_numer,function(x) NULL)
for (well_i in seq_along(well_section)) {
temp_plate[[well_section_i]][[well_i]] <- sapply(c("barcode", "target_gene"),function(x) NULL)
temp_plate[[well_section_i]][[well_i]][[id]] <- list[i]
i <- i + 1
}
}
return(temp_plate)
}
plates <- sapply(plate_ids, function(x) NULL)
for (plate_i in 1:length(plate_ids)) {
barcodes_for_plate <- read_excel(barcode_maps_f[plate_i], col_names=FALSE)$X__1
plates[[plate_ids[plate_i]]] <-
create_new_plate_from_list(plates[[plate_ids[plate_i]]],
well_alpha, well_numer,
"barcode", barcodes_for_plate)
# traverse_into_plate_wells(plates[[plate_ids[plate_i]]], "barcode", barcodes_for_plate)
# offset <- offsets[match(barcode_maps[plate_i], barcode_maps)]
# temp_plate <- create_barcodes(well_alpha, well_numer, offset)
# plates[[plate_ids[plate_i]]] <- temp_plate
}
plates
plates$D12_R3
plates <- create_plates(plate_ids, barcode_maps)
plates
source("functions.R")
source("parameters.R")
plates <- create_plates(plate_ids, barcode_maps)
plates
complete_plates <- add_gene_id(plates, tgene_df$`Construct ID`)
plates
temp_plates <- plates
plate=1
temp_plates[[plate]]
traverse_into_plate_wells(temp_plates[[plate]], "target_gene", target_genes_list)
source("functions.R")
plates <- create_plates(plate_ids, barcode_maps)
complete_plates <- add_gene_id(plates, tgene_df$`Construct ID`)
complete_plates
complete_plates$D12_R3
complete_plates
install.packages("rlist")
source('~/Desktop/Gimelbrant/datamunge/datamunge/barcode_gen.R')
complete_plates
project_dir
project_dir <- "/Users/alexkim/Desktop/Gimelbrant/datamunge/"
project_dir
dir.create(file.path(project_dir, "output"), showWarnings = FALSE)
dir.create(file.path(project_dir, "output2"), showWarnings = FALSE)
file.path(project_dir, "output")
project_dir <- "/Users/alexkim/Desktop/Gimelbrant/datamunge"
file.path(project_dir, "output")
output_dir <- file.path(project_dir, "output")
dir.create(output_dir, showWarnings = FALSE)
library(rlist)
write_wells_info <- function(project_dir, plates_list, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER) {
output_dir <- file.path(project_dir, "output")
dir.create(output_dir, showWarnings = FALSE)
if (WRITE_WELLS_FILE) {
list.save(plates_list, file.path(output_dir, 'wells_info.yaml'))
}
}
write_wells_info(project_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
knitr::opts_chunk$set(echo = TRUE)
plot(pressure)
?render
??render
install.packages("rmarkdown")
library(rmarkdown)
complete_plates
plates
plates
plate_i <- 1
plate <- plate_ids[plate_i]
plate
plate_id <- plate_ids[plate_i]
library(ggplot2)
library(data.table)
library(dplyr)
library(knitr)
library(kableExtra)
row1_header <- c("A","C","E","G")
row2_header <- c("B","D","F","H")
createColumns <- function(row_header) {
lapply(1:4, function(i) {
barcodes <- traverse_out_fn(list(plate[[i]]), "barcode")
bc_dt <- data.frame(matrix(unlist(strsplit(barcodes, "_")), ncol=2, byrow=T),stringsAsFactors=FALSE)
names(bc_dt) <- c("fw", "rv")
bc_dt
column(3, align="center",
h3(row_header[i]),
renderText({"Hi"}),
renderTable({ bc_dt })
)
})
}
fluidRow(
column(12,
createColumns(row1_header)
),
column(12,
createColumns(row2_header)
)
)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
library(readxl)
library(writexl)
library(dplyr)
source("functions.R")
source("parameters.R")
output_dir <- file.path(project_dir, "output")
dir.create(output_dir, showWarnings = FALSE)
{
tgene_f <- pert_map_path
tgene_fo <- file.path(output_dir, "pert_map_w_ids.xlsx")
WRITE_CONSTRUCT_FILE <- TRUE
tgene_df <- create_constructs(tgene_f, tgene_fo)
}
{
# barcodes_f <- paste0("../clean_data/fw_rv_pr_barcodes.xlsx")
### Create master plates list with barcodes
plates <- create_plates(plate_ids, barcode_maps)
### Add target_gene data to plates list
complete_plates <- add_gene_id(plates, tgene_df$`Construct ID`)
}
{
WRITE_WELLS_FILE <- TRUE
WRITE_PRINTSHEET_HELPER <- TRUE
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
}
row1_header <- c("A","C","E","G")
row2_header <- c("B","D","F","H")
createColumns <- function(row_header) {
lapply(1:4, function(i) {
barcodes <- traverse_out_fn(list(plate[[i]]), "barcode")
bc_dt <- data.frame(matrix(unlist(strsplit(barcodes, "_")), ncol=2, byrow=T),stringsAsFactors=FALSE)
names(bc_dt) <- c("fw", "rv")
bc_dt
column(3, align="center",
h3(row_header[i]),
renderText({"Hi"}),
renderTable({ bc_dt })
)
})
}
fluidRow(
column(12,
createColumns(row1_header)
),
column(12,
createColumns(row2_header)
)
)
renderPlot({
x    = faithful[, 2]  # Old Faithful Geyser data
bins = seq(min(x), max(x), length.out = input$bins + 1)
# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
row1_header <- c("A","C","E","G")
row2_header <- c("B","D","F","H")
createColumns <- function(row_header) {
lapply(1:4, function(i) {
barcodes <- traverse_out_fn(list(plate[[i]]), "barcode")
bc_dt <- data.frame(matrix(unlist(strsplit(barcodes, "_")), ncol=2, byrow=T),stringsAsFactors=FALSE)
names(bc_dt) <- c("fw", "rv")
bc_dt
column(3, align="center",
h3(row_header[i]),
renderText({"Hi"}),
renderTable({ bc_dt })
)
})
}
fluidRow(
column(12,
createColumns(row1_header)
),
column(12,
createColumns(row2_header)
)
)
renderPlot({
x    = faithful[, 2]  # Old Faithful Geyser data
bins = seq(min(x), max(x), length.out = input$bins + 1)
# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white')
})
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
install.packages("flexdashboard")
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
kable(mtcars)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
source("functions.R")
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
write_wells_info(output_dir, complete_plates, WRITE_WELLS_FILE, WRITE_PRINTSHEET_HELPER)
